#application.properties

    # 1. Oracle DB Settings

spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:XE
spring.datasource.username=c##soobin
spring.datasource.password=1234

###################################################################

    # 2. Create/Delete tables and sequences, loads import.sql

spring.jpa.hibernate.ddl-auto=create

            #############################################
            #출처 : https://blog.naver.com/PostView.nhn?blogId=ka28&logNo=222355010576
            ## create: 테이블이 없을 경우 테이블 생성하는 옵션(이 때 DB 가 전부 날아가기 때문에, create로 해놓으면 실행시마다 DB 가 날아간다. )
            #
            #create-drop: 테스트 환경에 적합한 옵션. 테스트 실행 시 mock data를 위해 table을 생성하고 테스트 종료 후 테이블을 삭제시킨다.
            #
            #validate: application 실행 시  @Entity들과 이미 존재하는 테이블(schema)가 정상적으로 맵핑되었는지 판단하여 만약 @Entity 와 테이블이 제대로 맵핑되지 않으면 application이 실행되지 않는다.
            #
            #update: 이미 테이블이 존재하는 상황에서 @Entity에 속성이 추가될 경우, 기존의 테이블의 데이터에는 변화 없이 새로운 컬럼을 추가해준다.
            #
            #none : 아무 작업도 하지 않는다.
            #############################################

    # 2-1 CRUD LOGGING

spring.jpa.show-sql=true

    # 3 HikariCP Settings

#spring.datasource.hikari.connection-timeout=60000
#spring.datasource.hikari.maximum-pool-size=5
#logging.level.org.hibernate=info
#spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect

###################################################################
